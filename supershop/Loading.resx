<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLoader.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCqRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB0AAAALAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAxAC4AMAAgACgA
        dQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA4ADAAKQAsACAAcQB1AGEAbABpAHQAeQAgAD0A
        IAA5ADAACgAAAAAA/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwKDAwLCgsLDQ4SEA0OEQ4L
        CxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQUFBQUFBQUFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU/8AAEQgAnQCdAwEiAAIRAQMRAf/EAB8AAAEFAQEB
        AQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
        cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
        1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//E
        ALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDTh
        JfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKT
        lJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5
        +v/aAAwDAQACEQMRAD8A/VOiiigAooooAKK+e/HH7f3wA+HfimTw9rXxJ05NUhk8qaOzhnu44WHBV5IY
        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
</value>
  </data>
</root>